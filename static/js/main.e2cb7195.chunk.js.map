{"version":3,"sources":["components/Slider.js","components/Main.js","App.js","serviceWorker.js","index.js"],"names":["iOSBoxShadow","IOSSlider","withStyles","theme","root","color","palette","primary","main","height","padding","thumb","width","backgroundColor","boxShadow","marginTop","marginLeft","active","valueLabel","left","top","background","track","rail","opacity","mark","markActive","Slider","formatTax","tax","formatTime","time","years","Math","floor","months","result","concat","defaultValue","min","max","onChange","step","type","value","Box","mt","ml","mr","Typography","variant","Intl","NumberFormat","style","currency","format","formatValue","aria-label","Main","useState","income","setIncome","setTax","setTime","futureValue","pow","Container","maxWidth","p","textAlign","event","newValue","mb","createMuiTheme","typography","fontFamily","caption","fontSize","fontWeight","h4","h5","subtitle2","App","ThemeProvider","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"sRAMMA,EACJ,kFAEIC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,MAAOF,EAAMG,QAAQC,QAAQC,KAC7BC,OAAQ,EACRC,QAAS,UAEXC,MAAO,CACLF,OAAQ,GACRG,MAAO,GACPC,gBAAiB,OACjBC,UAAWd,EACXe,WAAY,GACZC,YAAa,GACb,6BAA8B,CAC5BF,UAAW,iFAEX,uBAAwB,CACtBA,UAAWd,KAIjBiB,OAAQ,GACRC,WAAY,CACVC,KAAM,oBACNC,KAAM,GACN,MAAO,CACLC,WAAY,cACZhB,MAAO,SAGXiB,MAAO,CACLb,OAAQ,GAEVc,KAAM,CACJd,OAAQ,EACRe,QAAS,GACTX,gBAAiB,WAEnBY,KAAM,CACJZ,gBAAiB,UACjBJ,OAAQ,EACRG,MAAO,EACPG,WAAY,GAEdW,WAAY,CACVF,QAAS,EACTX,gBAAiB,mBA9CHX,CAgDdyB,KAeEC,EAAY,SAACC,GACjB,MAAM,GAAN,OAAUA,EAAV,MAGIC,EAAa,SAACC,GAClB,IAAMC,EAAQC,KAAKC,MAAMH,EAAK,IACxBI,EAASJ,EAAO,GAClBK,EAAS,GAcb,OAbc,IAAVJ,EACFI,EAASA,EAAOC,OAAO,SACdL,EAAQ,IACjBI,EAASA,EAAOC,OAAP,UAAiBL,EAAjB,WAEG,IAAVA,GAA0B,IAAXG,IACjBC,EAASA,EAAOC,OAAO,QAEV,IAAXF,EACFC,EAASA,EAAOC,OAAO,YACdF,EAAS,IAClBC,EAASA,EAAOC,OAAP,UAAiBF,EAAjB,YAEJC,GAGM,cAA8D,IAA3DE,EAA0D,EAA1DA,aAAcC,EAA4C,EAA5CA,IAAKC,EAAuC,EAAvCA,IAAKC,EAAkC,EAAlCA,SAAUC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MAC9D,OACE,kBAACC,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GACrB,kBAACC,EAAA,EAAD,CAAY5C,MAAM,UAAU6C,QAAQ,aAxCtB,SAACN,EAAOD,GAC1B,OAAQA,GACN,IAAK,WACH,OAAOQ,KAAKC,aAAa,QAAS,CAAEC,MAAO,WAAYC,SAAU,QAASC,OAAOX,GACnF,IAAK,MACH,OAAOhB,EAAUgB,GACnB,IAAK,OACH,OAAOd,EAAWc,GACpB,QACE,QAgCGY,CAAYZ,EAAOD,IAEtB,kBAAC1C,EAAD,CACEwD,aAAW,aACXjB,IAAKA,EACLD,IAAKA,EACLG,KAAMA,EACND,SAAUA,EACVH,aAAcA,MC1CPoB,EA3DF,WAAO,IAAD,EACWC,mBAAS,KADpB,mBACVC,EADU,KACFC,EADE,OAEKF,mBAAS,IAFd,mBAEV9B,EAFU,KAELiC,EAFK,OAGOH,mBAAS,KAHhB,mBAGV5B,EAHU,KAGJgC,EAHI,KAiBXC,EAAc,WAClB,OAAOJ,GAAQ/B,EAAI,KAAO,CAACI,KAAKgC,IAAK,SAAalC,GAAQ,GAAK,SAGjE,OACE,kBAACmC,EAAA,EAAD,CAAWC,UAAU,GACnB,kBAACtB,EAAA,EAAD,CAAKuB,EAAG,EAAGC,UAAU,UACnB,kBAACpB,EAAA,EAAD,CAAY5C,MAAM,UAAU6C,QAAQ,MAApC,qCAEF,kBAACL,EAAA,EAAD,CAAKwB,UAAU,SAASvB,GAAI,GAC1B,kBAACG,EAAA,EAAD,CAAY5C,MAAM,UAAU6C,QAAQ,aAApC,qCAEF,kBAAC,EAAD,CAAQT,SAxBe,SAAC6B,EAAOC,GACjCV,EAAUU,IAuB8BhC,IAAK,IAAKC,IAAK,IAAOE,KAAM,IAAKC,KAAK,WAAWC,MAAOgB,EAAQtB,aAAc,MACpH,kBAACO,EAAA,EAAD,CAAKwB,UAAU,SAASvB,GAAI,GAC1B,kBAACG,EAAA,EAAD,CAAY5C,MAAM,UAAU6C,QAAQ,aAApC,2CAEF,kBAAC,EAAD,CAAQT,SAxBY,SAAC6B,EAAOC,GAC9BT,EAAOS,IAuB8BhC,IAAK,EAAGC,IAAK,GAAIE,KAAM,EAAGC,KAAK,MAAMC,MAAOf,EAAKS,aAAc,KAClG,kBAACO,EAAA,EAAD,CAAKwB,UAAU,SAASvB,GAAI,GAC1B,kBAACG,EAAA,EAAD,CAAY5C,MAAM,UAAU6C,QAAQ,aAApC,sBAEF,kBAAC,EAAD,CAAQZ,aAAc,IAAOG,SAxBR,SAAC6B,EAAOC,GAC/BR,EAAQQ,IAuBmDhC,IAAK,EAAGC,IAAK,IAAOG,KAAK,OAAOC,MAAOb,IAChG,kBAACc,EAAA,EAAD,CAAKE,GAAI,EAAGD,GAAI,EAAG0B,GAAI,GACrB,kBAACvB,EAAA,EAAD,CAAYC,QAAQ,MAApB,kBAEE,kBAACD,EAAA,EAAD,CAAYC,QAAQ,OAAO7C,MAAM,WAAjC,WACO8C,KAAKC,aAAa,QAAS,CAAEC,MAAO,WAAYC,SAAU,QAASC,OAAOS,KADjF,MAFF,YAQF,kBAACnB,EAAA,EAAD,CAAKE,GAAI,EAAGyB,GAAI,GACd,kBAACvB,EAAA,EAAD,CAAYC,QAAQ,KAAKmB,UAAU,UAAnC,gBACgBlB,KAAKC,aAAa,QAAS,CAAEC,MAAO,WAAYC,SAAU,QAASC,OAAOK,GAAU/B,EAAM,KAAOE,GAC/G,kBAACkB,EAAA,EAAD,CAAYC,QAAQ,UAAU7C,MAAM,SAApC,aACS8C,KAAKC,aAAa,QAAS,CAAEC,MAAO,WAAYC,SAAU,QAASC,OAAOS,IAAiBJ,GAAU/B,EAAM,KAAOE,GAD3H,UCrDJ5B,EAAQsE,YAAe,CAC3BnE,QAAS,CACPC,QAAS,CACPC,KAAM,YAGVkE,WAAY,CACVC,WAAY,aACZC,QAAS,CACPC,SAAU,GACVC,WAAY,KAEdC,GAAI,CACFF,SAAU,GACVC,WAAY,KAEdE,GAAI,CACFH,SAAU,GACVC,WAAY,KAEdG,UAAW,CACTJ,SAAU,GACVC,WAAY,QAaHI,EARH,WACV,OACE,kBAACC,EAAA,EAAD,CAAehF,MAAOA,GACpB,kBAAC,EAAD,QCtBciF,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.e2cb7195.chunk.js","sourcesContent":["import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport Slider from '@material-ui/core/Slider';\nimport Typography from '@material-ui/core/Typography';\n\nconst iOSBoxShadow =\n  '0 3px 1px rgba(0,0,0,0.1),0 4px 8px rgba(0,0,0,0.13),0 0 0 1px rgba(0,0,0,0.02)';\n\nconst IOSSlider = withStyles((theme) => ({\n  root: {\n    color: theme.palette.primary.main,\n    height: 2,\n    padding: '15px 0',\n  },\n  thumb: {\n    height: 28,\n    width: 28,\n    backgroundColor: '#fff',\n    boxShadow: iOSBoxShadow,\n    marginTop: -14,\n    marginLeft: -14,\n    '&:focus, &:hover, &$active': {\n      boxShadow: '0 3px 1px rgba(0,0,0,0.1),0 4px 8px rgba(0,0,0,0.3),0 0 0 1px rgba(0,0,0,0.02)',\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        boxShadow: iOSBoxShadow,\n      },\n    },\n  },\n  active: {},\n  valueLabel: {\n    left: 'calc(-50% + 12px)',\n    top: -22,\n    '& *': {\n      background: 'transparent',\n      color: '#000',\n    },\n  },\n  track: {\n    height: 2,\n  },\n  rail: {\n    height: 2,\n    opacity: 0.5,\n    backgroundColor: '#bfbfbf',\n  },\n  mark: {\n    backgroundColor: '#bfbfbf',\n    height: 8,\n    width: 1,\n    marginTop: -3,\n  },\n  markActive: {\n    opacity: 1,\n    backgroundColor: 'currentColor',\n  },\n}))(Slider);\n\nconst formatValue = (value, type) => {\n  switch (type) {\n    case 'currency':\n      return Intl.NumberFormat('pt-BR', { style: 'currency', currency: 'BRL' }).format(value);\n    case 'tax':\n      return formatTax(value);\n    case 'time':\n      return formatTime(value);\n    default:\n      return;\n  }\n};\n\nconst formatTax = (tax) => {\n  return `${tax}%`;\n};\n\nconst formatTime = (time) => {\n  const years = Math.floor(time/12);\n  const months = time % 12;\n  let result = '';\n  if (years === 1) {\n    result = result.concat('1 ano');\n  } else if (years > 1) {\n    result = result.concat(`${years} anos`);\n  }\n  if (years !== 0 && months !== 0) {\n    result = result.concat(' e ');\n  }\n  if (months === 1) {\n    result = result.concat('1 mês');\n  } else if (months > 1) {\n    result = result.concat(`${months} meses`);\n  }\n  return result\n};\n\nexport default ({ defaultValue, min, max, onChange, step, type, value }) => {\n  return (\n    <Box mt={2} ml={2} mr={2}>\n      <Typography color=\"primary\" variant=\"subtitle2\">\n        {formatValue(value, type)}\n      </Typography>\n      <IOSSlider\n        aria-label=\"ios slider\"\n        max={max}\n        min={min}\n        step={step}\n        onChange={onChange}\n        defaultValue={defaultValue}\n      />\n    </Box>\n  );\n};\n","import React, { useState } from 'react';\nimport Box from '@material-ui/core/Box';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from './Slider';\n\nconst Main = () => {\n  const [income, setIncome] = useState(1000);\n  const [tax, setTax] = useState(10);\n  const [time, setTime] = useState(12*30);\n\n  const handleIncomeChange = (event, newValue) => {\n    setIncome(newValue);\n  };\n\n  const handleTaxChange = (event, newValue) => {\n    setTax(newValue);\n  };\n\n  const handleTimeChange = (event, newValue) => {\n    setTime(newValue);\n  };\n\n  const futureValue = () => {\n    return income*(tax/100) * [Math.pow((1+0.001856), time) - 1] / 0.001856;\n  };\n\n  return (\n    <Container maxWidth={false}>\n      <Box p={3} textAlign=\"center\">\n        <Typography color=\"primary\" variant=\"h5\">Simule e planeje seus objetivos:</Typography>\n      </Box>\n      <Box textAlign=\"center\" mt={1}>\n        <Typography color=\"primary\" variant=\"subtitle2\">Quanto você gasta por mês?</Typography>\n      </Box>\n      <Slider onChange={handleIncomeChange} min={500} max={50000} step={500} type=\"currency\" value={income} defaultValue={1000} />\n      <Box textAlign=\"center\" mt={3}>\n        <Typography color=\"primary\" variant=\"subtitle2\">Quanto gostaria de guardar por mês?</Typography>\n      </Box>\n      <Slider onChange={handleTaxChange} min={1} max={10} step={1} type=\"tax\" value={tax} defaultValue={10} />\n      <Box textAlign=\"center\" mt={3}>\n        <Typography color=\"primary\" variant=\"subtitle2\">Por quanto tempo?</Typography>\n      </Box>\n      <Slider defaultValue={30*12} onChange={handleTimeChange} min={1} max={12*30} type=\"time\" value={time} />\n      <Box ml={2} mt={3} mb={2}>\n        <Typography variant=\"h4\">\n          Você terá\n          <Typography variant=\"span\" color=\"primary\">\n            {` ${Intl.NumberFormat('pt-BR', { style: 'currency', currency: 'BRL' }).format(futureValue())} `}\n          </Typography>\n          na Step\n        </Typography>\n      </Box>\n      <Box ml={2} mb={3}>\n        <Typography variant=\"h4\" textAlign=\"center\">\n          Seu $ parado {Intl.NumberFormat('pt-BR', { style: 'currency', currency: 'BRL' }).format(income * (tax / 100) * time)}\n          <Typography variant=\"caption\" color=\"error\">\n            {` (-${Intl.NumberFormat('pt-BR', { style: 'currency', currency: 'BRL' }).format(futureValue() - (income * (tax / 100) * time))})`}\n          </Typography>\n        </Typography>\n      </Box>\n    </Container>\n  );\n};\n\nexport default Main;\n","import React from 'react';\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport Main from './components/Main';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#FFFFFF',\n    },\n  },\n  typography: {\n    fontFamily: 'Montserrat',\n    caption: {\n      fontSize: 18,\n      fontWeight: 600,\n    },\n    h4: {\n      fontSize: 22,\n      fontWeight: 600,\n    },\n    h5: {\n      fontSize: 24,\n      fontWeight: 600,\n    },\n    subtitle2: {\n      fontSize: 18,\n      fontWeight: 600,\n    },\n  },\n});\n\nconst App = () => {\n  return (\n    <ThemeProvider theme={theme}>\n      <Main />\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}